kubectl apply -f posts.yaml
=> this command will create a pod using the yaml file in k8s dir

kubectl get posts 
=> this command will return the running pods inside the cluster


If your pods are showing ErrImagePull, ErrImageNeverPull, or ImagePullBackOff errors after running kubectl apply, the simplest solution is to provide an imagePullPolicy to the pod.

First, run kubectl delete -f infra/k8s/

Then, update your pod manifest:

    spec:
      containers:
        - name: posts
          image: cygnet/posts:0.0.1
          imagePullPolicy: Never

Then, run kubectl apply -f infra/k8s/

This will ensure that Kubernetes will use the image built locally from your image cache instead of attempting to pull from a registry.


if in image version is not given=>
For example = ercecan/posts   =>
In this scenario k8s will assume it is ercecan/posts:latest and will try to pull from dockerhub


docker ps => kubectl get pods

docker exec -it <container id> => kubectl exec -it [pod_name][cmd]

we use deployments to create pods, we do not deploy pods manually because it can easily update version imagws of pods or restart pods when they are down
